<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	<flow name="csv-process" doc:id="5c1164d2-07e1-404c-9f70-b979c178131c" >
		<file:listener doc:name="CSV ADP only" doc:id="5f9b8868-e018-4dbe-8018-c844f7d435ae" config-ref="csv-files" directory="input" moveToDirectory="output" renameTo="#[uuid() ++ '.csv']">
			<scheduling-strategy >
				<fixed-frequency />
			</scheduling-strategy>
			<file:matcher filenamePattern="*.csv" />
		</file:listener>
		<logger level="INFO" doc:name="SizeOf payload" doc:id="694ab435-6587-403a-8099-0daef7438fb4" message="#[sizeOf(payload)]"/>
		<os:clear doc:name="Clear all keys" doc:id="19ff85cb-d2ea-42e5-acb4-f17304531140" objectStore="batch-vars"/>
		<batch:job jobName="process-accountsBatch_Job" doc:id="95c458c2-4150-4357-b59d-85a36f80f6c0" blockSize="1000">
			<batch:process-records >
				<batch:step name="Batch_Step" doc:id="6ee41e40-76b6-483b-b35e-1b8e9d70ac29" >
					<ee:transform doc:name="Transform payload to employeeId" doc:id="7baa74f2-bd13-4d61-bc68-a6de5b7f6ead" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	'employeeId': payload.'Employee ID'[0]
}]]></ee:set-payload>
						</ee:message>
						<ee:variables >
						</ee:variables>
					</ee:transform>
					<logger level="INFO" doc:name="Payload" doc:id="14bda12e-e896-4e1f-96e5-7fc79047810a" message="#[write(payload, 'application/json')]"/>
					<batch:aggregator doc:name="Batch Aggregator" doc:id="ecce6ef7-ec98-4c96-8f5f-2c50fd27cdba" size="1000">
						<os:retrieve doc:name="Get counter" doc:id="c2eb4411-5a9b-4a52-8a45-2e3b97809d50" key="count" objectStore="batch-vars" target="count">
							<os:default-value ><![CDATA[#[1]]]></os:default-value>
						</os:retrieve>
						<os:store doc:name="Store new counter" doc:id="12721611-135b-4c43-a403-e696207fe159" key="count" objectStore="batch-vars">
							<os:value><![CDATA[#[vars.count + 1]]]></os:value>
						</os:store>
						<ee:transform doc:name="Create payload with jobs and list if employee Ids" doc:id="6a1ef47e-748a-4b1b-87cd-fb9c2c595a7c" >
							<ee:message >
							</ee:message>
							<ee:variables >
								<ee:set-variable variableName="output" ><![CDATA[%dw 2.0
output application/json
---
{
	"jobs": payload map ((item, index) -> {
        "employeeId": item.employeeId as Number
    })	
}]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
						<file:write doc:name="Write JSON file" doc:id="b08a4ad3-79c3-40a2-97ce-32dc54849c95" config-ref="csv-files" mode="CREATE_NEW" path="#['result/request-$(vars.count).json']">
							<file:content ><![CDATA[#[vars."output"]]]></file:content>
						</file:write>
					</batch:aggregator>
				</batch:step>
			</batch:process-records>
		</batch:job>
	</flow>
</mule>
